{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'https://example.com/api'; // Replace with actual API base URL\n\nexport const fetchProducts = async () => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/products`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching products', error);\n    return [];\n  }\n};\nexport const fetchProductById = async id => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/products/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching product', error);\n    return null;\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","fetchProducts","response","get","data","error","console","fetchProductById","id"],"sources":["/Users/aaryanprabhakar/Desktop/afford medical/question2/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = 'https://example.com/api'; // Replace with actual API base URL\n\nexport const fetchProducts = async () => {\n    try {\n        const response = await axios.get(`${API_BASE_URL}/products`);\n        return response.data;\n    } catch (error) {\n        console.error('Error fetching products', error);\n        return [];\n    }\n};\n\nexport const fetchProductById = async (id) => {\n    try {\n        const response = await axios.get(`${API_BASE_URL}/products/${id}`);\n        return response.data;\n    } catch (error) {\n        console.error('Error fetching product', error);\n        return null;\n    }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,yBAAyB,CAAC,CAAC;;AAEhD,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;EACrC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,YAAY,WAAW,CAAC;IAC5D,OAAOE,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,OAAO,EAAE;EACb;AACJ,CAAC;AAED,OAAO,MAAME,gBAAgB,GAAG,MAAOC,EAAE,IAAK;EAC1C,IAAI;IACA,MAAMN,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,YAAY,aAAaQ,EAAE,EAAE,CAAC;IAClE,OAAON,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,OAAO,IAAI;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}